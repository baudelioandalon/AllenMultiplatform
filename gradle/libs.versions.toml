[versions]

compottie = "1.1.1"
firebaseAuth = "1.11.1"
firebaseCommon = "1.11.1"
firebaseCommonKtx = "20.4.2"
firebaseFirestore = "1.11.1"
kotlin = "1.9.21"
compose = "1.6.0"
agp = "8.2.0"
androidx-appcompat = "1.6.1"
androidx-activityCompose = "1.8.1"
compose-uitooling = "1.6.2"
precompose = "1.6.0-beta02"
voyager = "1.0.0"
composeImageLoader = "1.7.1"
napier = "2.7.0"
buildConfig = "4.1.1"
kotlinx-coroutines = "1.8.0"
moko-core = "0.16.1"
moko-mvvm = "0.16.1"
ktor = "2.3.7"
ktor-negotiation = "2.3.7"
ktor-serialization = "2.3.7"
composeIcons = "1.1.0"
kotlinx-serialization = "1.6.2"
kotlinx-datetime = "0.5.0"
multiplatformSettings = "1.1.1"
koin = "3.5.3"
kstore = "0.7.1"
sqlDelight = "2.0.1"
apollo = "4.0.0-beta.4"
google-services = "4.3.14"
kamel-image = "0.9.1"
constraintlayout = "2.1.4"
lifecycleViewmodelKtx = "2.7.0"
lifecycleViewmodelAndroid = "2.8.0-alpha02"

[libraries]

androidx-appcompat = { module = "androidx.appcompat:appcompat", version.ref = "androidx-appcompat" }
androidx-activityCompose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }
compose-uitooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose-uitooling" }
compottie = { module = "io.github.alexzhirkevich:compottie", version.ref = "compottie" }
firebase-auth = { module = "dev.gitlive:firebase-auth", version.ref = "firebaseAuth" }
firebase-common-ktx = { module = "com.google.firebase:firebase-common-ktx", version.ref = "firebaseCommonKtx" }
gitlive-firebase-common = { module = "dev.gitlive:firebase-common", version.ref = "firebaseCommon" }
gitlive-firebase-firestore = { module = "dev.gitlive:firebase-firestore", version.ref = "firebaseFirestore" }
koin-android = { module = "io.insert-koin:koin-android", version.ref = "koin" }
koin-compose = { module = "io.insert-koin:koin-androidx-compose", version.ref = "koin" }
precompose = { module = "moe.tlaster:precompose", version.ref = "precompose" }
voyager-navigator = { module = "cafe.adriel.voyager:voyager-navigator", version.ref = "voyager" }
composeImageLoader = { module = "io.github.qdsfdhvh:image-loader", version.ref = "composeImageLoader" }
napier = { module = "io.github.aakira:napier", version.ref = "napier" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "kotlinx-coroutines" }

ktor-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor-negotiation" }
ktor-serialization = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor-serialization" }
ktor-client-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
composeIcons-featherIcons = { module = "br.com.devsrsouza.compose.icons:feather", version.ref = "composeIcons" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinx-datetime" }
multiplatformSettings = { module = "com.russhwolf:multiplatform-settings", version.ref = "multiplatformSettings" }
koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
kstore = { module = "io.github.xxfast:kstore", version.ref = "kstore" }
sqlDelight-driver-sqlite = { module = "app.cash.sqldelight:sqlite-driver", version.ref = "sqlDelight" }
sqlDelight-driver-android = { module = "app.cash.sqldelight:android-driver", version.ref = "sqlDelight" }
sqlDelight-driver-native = { module = "app.cash.sqldelight:native-driver", version.ref = "sqlDelight" }
sqlDelight-driver-js = { module = "app.cash.sqldelight:web-worker-driver", version.ref = "sqlDelight" }
apollo-runtime = { module = "com.apollographql.apollo3:apollo-runtime", version.ref = "apollo" }

#Download and showing images from url
kamel-image = { module = "media.kamel:kamel-image", version.ref = "kamel-image" }

#Mvvm Library
moko-core = {module = "dev.icerock.moko:mvvm-core",version.ref="moko-core"}
moko-mvvm = { module = "dev.icerock.moko:mvvm-compose", version.ref = "moko-mvvm" }
androidx-constraintlayout = { group = "androidx.constraintlayout", name = "constraintlayout", version.ref = "constraintlayout" }
androidx-lifecycle-viewmodel-ktx = { group = "androidx.lifecycle", name = "lifecycle-viewmodel-ktx", version.ref = "lifecycleViewmodelKtx" }
androidx-lifecycle-viewmodel-android = { group = "androidx.lifecycle", name = "lifecycle-viewmodel-android", version.ref = "lifecycleViewmodelAndroid" }
[plugins]

multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
compose = { id = "org.jetbrains.compose", version.ref = "compose" }
android-application = { id = "com.android.application", version.ref = "agp" }
android-library = { id = "com.android.library", version.ref = "agp" }
buildConfig = { id = "com.github.gmazzo.buildconfig", version.ref = "buildConfig" }
kotlinx-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
sqlDelight = { id = "app.cash.sqldelight", version.ref = "sqlDelight" }
apollo = { id = "com.apollographql.apollo3", version.ref = "apollo" }
google-services = { id = "com.google.gms.google-services", version.ref = "google-services" }
